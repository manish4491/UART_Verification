class uart_agt extends uvm_agent;
    `uvm_component_utils(uart_agt)
    function new(string name = "uart_agt",uvm_component parent);
        super.new(name,parent);
    endfunction

    uart_drv d_h;
    uart_mon m_h;
    uart_sqr sqr_h;
    agt_cfg ac_h;

    function void build_phase(uvm_phase phase);
        super.build_phase(phase);

        d_h = uart_drv::type_id::create("d_h",this);
        m_h = uart_mon::type_id::create("m_h",this);
        sqr_h = uart_sqr::type_id::create("sqr_h",this);

//      uvm_config_db#(agt_cfg)::get(this,"","agt_cfg",ac_h);
//      uvm_config_db#(virtual uart_if)::set(this,"*","virtual_inf",ac_h.vif); // ENVIRONMENT ASSIGNS ag_h[i].ac_h = ec_h.ac_h[i] - CHECK!!!
   endfunction

    function void connect_phase(uvm_phase phase);
        super.connect_phase(phase);
//      uvm_config_db#(virtual uart_if)::set(this,"*","virtual_inf",ac_h.vif); // ENVIRONMENT ASSIGNS ag_h[i].ac_h = ec_h.ac_h[i] - CHECK!!!
        d_h.seq_item_port.connect(sqr_h.seq_item_export);
    endfunction

endclass